{
  "title": "DOER",
  "subtitle": "Do it, do it now!",
  "menu_entries": [

    {
      "_id": "thesis",
      "label": "Thesis",
      "terminals": [
        {
          "type": "git",
          "root": "/data/thesis/code"
        },
        {
          "type": "ipython",
          "root": "/data/thesis/code",
          "interpreter_version": 2
        },
        {
          "type": "mpeta",
          "root": "/data/thesis",
          "commands": [
            "texmaker /data/thesis/report/tex/main.tex >/dev/null 2>&1 &",
            "emacs /data/thesis/code/patmtk/regularizers.cfg --geometry 50x50+0+0 &",
            "emacs /data/thesis/code/patmtk/train.cfg --geometry 60x45-0+75 &",
            "emacs /data/thesis/code/patmtk/pipeline.cfg --geometry 25x25-0+0 &",
            "source /data/thesis/scripts/add-aliases.sh",
            "~/launchers/pycharm.py /data/thesis/code/patmtk >/dev/null 2>&1 &"
          ]
        }
      ]
    },

    {
      "_id": "green_magic",
      "label": "Green Magic",
      "terminals": [
        {
          "type": "git",
          "root": "/data/projects/knowfly/green-machine/green_magic"
        },
        {
          "type": "mpeta",
          "root": "/data/projects/knowfly/green-machine/green_magic",
          "commands": [
              "emacs /data/projects/knowfly/green-machine/green_magic/setup.py &",
              "charm /data/projects/knowfly/green-machine/green_magic >/dev/null 2>&1 &"
          ]
        }
      ]
    },

    {
      "_id": "green_web",
      "label": "Green Web",
      "terminals": [
        {
          "type": "git",
          "root": "/data/projects/knowfly/green-machine/green-web"
        },
        {
          "type": "ipython",
          "root": "/data/projects/knowfly/green-machine/green-web",
          "interpreter_version": 3
        },
        {
          "type": "mpeta",
          "root": "/data/projects/knowfly/green-machine/green-web",
          "commands": [
            "emacs /data/projects/knowfly/green-machine/green-web/run-server.py &"
          ]
        },
        {
          "type": "server",
          "root": "/data/projects/knowfly/green-machine/green-web",
          "commands": [
            "python3 run-server.py"
          ]
        }
      ]
    },

    {
      "_id": "cinema",
      "label": "Cinema",
      "terminals": [
        {
          "type": "cinema",
          "commands": [
            "python3 /data/tools/doer/python-doer/launch-movies.py"
          ]
        }
      ]
    },

    {
      "_id": "dm",
      "label": "Dmiliki",
      "terminals": [
        {
          "type": "git",
          "root": "/data/projects/dm/code"
        },
        {
          "type": "mpeta",
          "root": "/data/projects/dm/",
          "commands": [
            "xdg-open /data/projects/dm/Vampire_The_Requiem_okular.pdf >/dev/null 2>&1 &"
          ]
        }
      ]
    },

    {
      "_id": "pipes-n-processors",
      "label": "Pipes n Processors",
      "terminals": [
        {
          "type": "git",
          "root": "/data/projects/python-custom-packages/pipes-n-processors/"
        },
        {
          "type": "ipython",
          "root": "/data/projects/python-custom-packages/pipes-n-processors/",
          "interpreter_version": 3
        },
        {
          "type": "mpeta",
          "root": "/data/projects/python-custom-packages/pipes-n-processors/",
          "commands": [
            "~/launchers/pycharm.py /data/projects/python-custom-packages/pipes-n-processors >/dev/null 2>&1 &",
            "emacs /data/projects/python-custom-packages/pipes-n-processors/main.py &"
          ]
        }
      ]
    },

    {
      "_id": "album-creator",
      "label": "Album creator",
      "terminals": [
        {
          "type": "git",
          "root": "/data/projects/music-album-creator"
        },
        {
          "type": "ipython",
          "root": "/data/projects/music-album-creator",
          "interpreter_version": 3
        },
        {
          "type": "mpeta",
          "root": "/data/projects/music-album-creator",
          "commands": [
            "~/launchers/pycharm.py /data/projects/music-album-creator >/dev/null 2>&1 &"
          ]
        }
      ]
    },

    {
      "_id": "oikonomika",
      "label": "Oikonomika",
      "terminals": [

        {
          "type": "mpeta",
          "root": "/data/bureaucracy/ing",
          "commands": [
              "~/launchers/pycharm.py /data/bureaucracy/ing >/dev/null 2>&1 &",
              "google-chrome https://docs.google.com/spreadsheets/u/0/ >/dev/null 2>&1 &"
          ]
        }
      ]
    },

   {
    "_id": "cv",
    "label": "Curriculum Vitae",
    "terminals": [
      {
        "type": "mpeta",
        "root": "/data/repos/cv",
          "commands": [
            "xhost +",
            "docker start -ai texmaker-app"
        ]
      },
      {
        "type": "cv",
        "root": "/data/repos/cv",
          "commands": [
          "git status",
          "git log --graph --all --oneline --decorate | head",
          "git tag"
        ]
      }
    ]
   },

         {
    "_id": "psr",
    "label": "Python Semantic Release",
    "terminals": [
      {
        "type": "git",
        "root": "/data/projects/python-semantic-release/"
      },
        {
            "type": "psrmpeta",
            "root": "/data/projects/python-semantic-release/",
            "commands": [
                "~/launchers/pycharm.py /data/projects/python-semantic-release >/dev/null 2>&1 &"
            ]

      }
    ]
         },
   {
    "_id": "neural-style-transfer",
    "label": "Neural Style Transfer",
    "terminals": [
      {
        "type": "git",
        "root": "/data/projects/neural-style-transfer/"
      },
        {
            "type": "neural-style-transfer",
            "root": "/data/projects/neural-style-transfer/",
            "commands": [
                "source /data/projects/neural-style-transfer/env/bin/activate",
                "~/launchers/pycharm.py /data/projects/neural-style-transfer/ >/dev/null 2>&1 &"
            ]

      }
    ]
   },

       {
      "_id": "green_machine",
      "label": "Green Machine",
      "terminals": [
        {
          "type": "git",
          "root": "/data/projects/knowfly/green-machine/"
        },
        {
          "type": "ipython",
          "root": "/data/projects/knowfly/green-machine/",
          "interpreter_version": 3
        },
        {
          "type": "mpeta",
          "root": "/data/projects/knowfly/green-machine/",
          "commands": [
              "charm /data/projects/knowfly/green-machine/ >/dev/null 2>&1 &"
          ]
        }
      ]
    }

  ]
}
