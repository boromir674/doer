[tox]
envlist=py38

[testenv]
description = A test environment where production and test-related (pytest) dependencies are installed
    Runs the entire test-suite.
setenv =
; It will overide variables in passenv in case of collision
    PYTHONPATH={toxinidir}/tests
    PYTHOUNBUFFERED=yes
    TEST_RESULTS_DIR={toxinidir}/test-results
deps = pytest
commands = pytest -vv {posargs}


[testenv:dev-test]
description = {[testenv]description}
basepython = {env:TOXPYTHON:python3}
use_develop = true


[testenv:dev-test-cov]
description = {[testenv]description}
basepython = {env:TOXPYTHON:python3}
deps =
    {[testenv]deps}
    pytest-cov
use_develop = true
commands = pytest {posargs} --cov -vv --cov-report=term-missing --junitxml={env:TEST_RESULTS_DIR:test-results}/{env:JUNIT_TEST_RESULTS:junit-test-results.xml}


[testenv:py38-cov]
description = {[testenv]description}
basepython = python3.8
deps =
    {[testenv]deps}
    pytest-cov
commands = {posargs:pytest --cov -vv --cov-report=term-missing --junitxml={env:TEST_RESULTS_DIR:test-results}/{env:JUNIT_TEST_RESULTS:junit-test-results.xml}}


[runenv]
description = Run the cli and render the interactive menu.
basepython = python3
deps = -rrequirements.txt
commands = pydoer menu {toxinidir}/menu_entries.json


[runenv:run]
description = Build and install the pydoer package. {[runenv]description}

[testenv:run-dev]
description = Build and install the pydoer package in 'develop'. {[runenv]description}
use_develop = True
