import os
import sys

import click

from .menu_renderer import MenuRenderer
from .window_spawn_listener import SpawnListener
from .windows_manager_instance import windows_manager

MY_DIR = os.path.dirname(os.path.realpath(__file__))
bash_scripts_dir_path = os.path.join(MY_DIR, 'generated_bash_scripts')



@click.group()
def cli():
    pass


@cli.command()  # @cli, not @click!
def close_doing():
    click.echo('CLOSE DOING')
    windows_manager.close_all()


@cli.command()  # @cli, not @click!
@click.argument('json_path')  # help='path to the json file from which to construct the menu')
@click.option('-sd', '--scripts-dir', default=bash_scripts_dir_path,
    help='define your custom location to store the generated bash files')
def menu(json_path, scripts_dir):
    menu_renderer = menu_handler(json_path, scripts_dir)
    menu_renderer.show()


def menu_handler(directory_path, scripts_dir):
    try:
        # if directory exists already, we are cool with that: exist_ok=True
        os.makedirs(scripts_dir, exist_ok=True)
    except PermissionError as permission_error:
        print(permission_error)
        print('You can try the following:\n'
                '* install pydoer in a location that the code will have permission to create a directory '
                '(eg using the --user flag with pip install\n'
                '* pass in a directory using parameter flag -sd or --scripts-dir, where the code will have '
                'the necessary permissions to read/write')
        sys.exit(1)
    except FileExistsError as file_exists_error:
        print(file_exists_error)
        print('You have selected the \'{file_path}\' path as the directory to store the autogenerated scripts.'.format(
            file_path=directory_path
        ))
        print('Unfortunately, there already exists a file in the path you have specified.')
        print('Please re-run and designate another path to store the autogenerated scripts')
        sys.exit(1)

    terminal_spawn_listener = SpawnListener(windows_manager)

    menu_renderer = MenuRenderer(
        terminal_spawn_listener=terminal_spawn_listener,
        scripts_directory=scripts_dir
    )
    menu_renderer.get_menu(directory_path)
    return menu_renderer


if __name__ == '__main__':
    cli()
